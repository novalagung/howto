"use strict";(self.webpackChunkhowto=self.webpackChunkhowto||[]).push([[380],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={title:"How to Setup WireGuard VPN Server + UI",sidebar_label:"Setup WireGuard VPN Server + UI",description:"How to setup WireGuard VPN Server and Wireguard UI on Linux using wireguard-install or wireguard docker image",keywords:["wireguard","vpn","docker","linux","amazon linux","aws","digital ocean"]},o=void 0,l={unversionedId:"setup-wireguard-vpn-server",id:"setup-wireguard-vpn-server",title:"How to Setup WireGuard VPN Server + UI",description:"How to setup WireGuard VPN Server and Wireguard UI on Linux using wireguard-install or wireguard docker image",source:"@site/docs/setup-wireguard-vpn-server.md",sourceDirName:".",slug:"/setup-wireguard-vpn-server",permalink:"/setup-wireguard-vpn-server",draft:!1,tags:[],version:"current",frontMatter:{title:"How to Setup WireGuard VPN Server + UI",sidebar_label:"Setup WireGuard VPN Server + UI",description:"How to setup WireGuard VPN Server and Wireguard UI on Linux using wireguard-install or wireguard docker image",keywords:["wireguard","vpn","docker","linux","amazon linux","aws","digital ocean"]},sidebar:"tutorialSidebar",previous:{title:"Setup Oracle XE Database Server",permalink:"/setup-oracle-xe-database-server"},next:{title:"Automate Setup of AWS EC2 with IGW and SSH Access enabled using Terraform",permalink:"/terraform-aws-ec2-internet-gateway-ssh"}},s={},u=[{value:"1. WireGuard in a nutshell",id:"1-wireguard-in-a-nutshell",level:2},{value:"2. Client application",id:"2-client-application",level:2},{value:"3. WireGuard server setup",id:"3-wireguard-server-setup",level:2},{value:"\u25c9 Using <code>wireguard-install</code>",id:"-using-wireguard-install",level:3},{value:"\u25c9 Using Docker <code>linuxserver/wireguard</code>",id:"-using-docker-linuxserverwireguard",level:3},{value:"\u25c9 Whitelist the UDP port",id:"-whitelist-the-udp-port",level:3},{value:"4. Connect to WireGuard",id:"4-connect-to-wireguard",level:2},{value:"5. Set Up WireGuard UI",id:"5-set-up-wireguard-ui",level:2}],d={toc:u};function p(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are several ways to install WireGuard on linux-based server. Two of them are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"using ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/angristan/wireguard-install"},"wireguard-install")),(0,a.kt)("li",{parentName:"ul"},"using ",(0,a.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/linuxserver/wireguard"},"linuxserver/wireguard")," Docker Image")),(0,a.kt)("p",null,"We are going to learn both approaches in this post."),(0,a.kt)("h2",{id:"1-wireguard-in-a-nutshell"},"1. WireGuard in a nutshell"),(0,a.kt)("p",null,"WireGuard is an open-source communication protocol that implements encrypted virtual private networks (VPNs) over UDP. It is very easy to use and secure. WireGuard aims to have better performance compared to IPSec and OpenVPN."),(0,a.kt)("h2",{id:"2-client-application"},"2. Client application"),(0,a.kt)("p",null,"WireGuard supports many operating systems. Download the installer via the following link:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://www.wireguard.com/install/"},"https://www.wireguard.com/install/"))),(0,a.kt)("h2",{id:"3-wireguard-server-setup"},"3. WireGuard server setup"),(0,a.kt)("h3",{id:"-using-wireguard-install"},"\u25c9 Using ",(0,a.kt)("inlineCode",{parentName:"h3"},"wireguard-install")),(0,a.kt)("p",null,"The easiest way to install WireGuard server is via ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/angristan/wireguard-install"},"wireguard-install"),". They provide an executable shell script to automate the installation on some Linux Distro, such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AlmaLinux"),(0,a.kt)("li",{parentName:"ul"},"Arch Linux system"),(0,a.kt)("li",{parentName:"ul"},"CentOS"),(0,a.kt)("li",{parentName:"ul"},"Debian"),(0,a.kt)("li",{parentName:"ul"},"Fedora"),(0,a.kt)("li",{parentName:"ul"},"Oracle"),(0,a.kt)("li",{parentName:"ul"},"Ubuntu")),(0,a.kt)("p",null,"Ok, let us get to the point. To start the installation, run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -O https://raw.githubusercontent.com/angristan/wireguard-install/master/wireguard-install.sh\nchmod +x wireguard-install.sh\n./wireguard-install.sh\n")),(0,a.kt)("p",null,"You will be asked to confirm several configurations key. The pre-defined value for each prompt should be sufficient, except for the ",(0,a.kt)("inlineCode",{parentName:"p"},"IPv4 or IPv6 public address"),", for that specific prompt, ensure to have correct public IP address entered."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you are using AWS or another cloud provider, there is a chance that the default IP address value is not the public IP, but the private IP. So please keep in mind, always use the public IP there.")),(0,a.kt)("p",null,"Then the response below will appear:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"Welcome to the WireGuard installer!\nThe git repository is available at: https://github.com/angristan/wireguard-install\n\nI need to ask you a few questions before starting the setup.\nYou can keep the default options and just press enter if you are ok with them.\n\nIPv4 or IPv6 public address: 11.234.5.181\nPublic interface: eth0\nWireGuard interface name: wg0\nServer WireGuard IPv4: 10.66.66.1\nServer WireGuard IPv6: fd42:42:42::1\nServer WireGuard port [1-65535]: 51820\nFirst DNS resolver to use for the clients: 1.1.1.1\nSecond DNS resolver to use for the clients (optional): 1.0.0.1\n\nOkay, that was all I needed. We are ready to setup your WireGuard server now.\nYou will be able to generate a client at the end of the installation.\n\nPress any key to continue...\n")),(0,a.kt)("p",null,"Press enter or any key to continue the installation process. Next, you will be prompted to enter the several configuration for the client."),(0,a.kt)("p",null,"Feel free to pick any name for ",(0,a.kt)("inlineCode",{parentName:"p"},"Client name")," and let the other fields be filled with the predefined value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"Client configuration\n\nThe client name must consist of alphanumeric character(s).\nIt may also include underscores or dashes and can't exceed 15 chars.\n\nClient name: noval\nClient WireGuard IPv4: 10.66.66.2\nClient WireGuard IPv6: fd42:42:42::2\n")),(0,a.kt)("p",null,"Keep pressing enter until you see the output below. At this point, the setup is pretty much completed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"Here is your client config file as a QR Code:\n\n...\n\nYour client config file is in /home/ubuntu/wg0-client-noval.conf\nIf you want to add more clients, you simply need to run this script another time!\n\nWireGuard is running.\nYou can check the status of WireGuard with: systemctl status wg-quick@wg0\n\nIf you don't have internet connectivity from your client, try to reboot the server.\n")),(0,a.kt)("p",null,"From that output you can tell where the client config file is located, it is in ",(0,a.kt)("inlineCode",{parentName:"p"},"/home/ubuntu/wg0-client-noval.conf"),". Save the content on that file somewhere, it will be used on the client side to connect to the WireGuard server."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more details, see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/angristan/wireguard-install"},"https://github.com/angristan/wireguard-install"))),(0,a.kt)("h3",{id:"-using-docker-linuxserverwireguard"},"\u25c9 Using Docker ",(0,a.kt)("inlineCode",{parentName:"h3"},"linuxserver/wireguard")),(0,a.kt)("p",null,"The first step is to install Docker engine. Then create the VPN server by starting a new container using ",(0,a.kt)("inlineCode",{parentName:"p"},"linuxserver/wireguard:latest")," using the following command:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For plain Docker:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -d \\\n  --name=wireguard \\\n  --cap-add=NET_ADMIN \\\n  --cap-add=SYS_MODULE \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Asia/Jakarta \\\n  -e SERVERURL=123.456.78.9 \\\n  -e SERVERPORT=51820 \\\n  -e PEERS=1 \\\n  -e PEERDNS=1.1.1.1 \\\n  -e INTERNAL_SUBNET=10.13.13.0 \\\n  -e ALLOWEDIPS=0.0.0.0/0,::/0 \\\n  -e PERSISTENTKEEPALIVE_PEERS=all \\\n  -e LOG_CONFS=true \\\n  -p 51820:51820/udp \\\n  -v /home/ec2-user/workspace/wireguard/config:/config \\\n  -v /lib/modules:/lib/modules \\\n  --sysctl="net.ipv4.conf.all.src_valid_mark=1" \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/wireguard:latest\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3.7'\n\nservices:\n  wireguard:\n    image: lscr.io/linuxserver/wireguard:latest\n    container_name: wireguard\n    cap_add:\n      - NET_ADMIN\n      - SYS_MODULE\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Asia/Jakarta\n      - SERVERURL=123.456.78.9\n      - SERVERPORT=51820\n      - PEERS=1\n      - PEERDNS=1.1.1.1\n      - INTERNAL_SUBNET=10.13.13.0\n      - ALLOWEDIPS=0.0.0.0/0,::/0\n      - PERSISTENTKEEPALIVE_PEERS=all\n      - LOG_CONFS=true\n    volumes:\n      - /home/ec2-user/workspace/wireguard/config:/config\n      - /lib/modules:/lib/modules\n    ports:\n      - 51820:51820/udp\n    sysctls:\n      - net.ipv4.conf.all.src_valid_mark=1\n    restart: always\n")))),(0,a.kt)("p",null,"Ensure to adjust the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"env var")," below:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PUID")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"PGID")," \u2192 use command ",(0,a.kt)("inlineCode",{parentName:"li"},"id <your-linux-username>")," to get the correct number"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TZ")," \u2192 specify the timezone of your location. example: ",(0,a.kt)("inlineCode",{parentName:"li"},"Asia/Jakarta")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Etc/UTC")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"SERVERURL")," \u2192 public IP of your linux instance")),(0,a.kt)("p",null,"Not to forget, map the ",(0,a.kt)("inlineCode",{parentName:"p"},"/config")," path within container to the correct path in host. In the example I use ",(0,a.kt)("inlineCode",{parentName:"p"},"/home/ec2-user/workspace/wireguard/config:/config"),"."),(0,a.kt)("p",null,"Create the container, wait for a few seconds, then check the container logs to see the result. Then go to the path where it's pointing to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/config"),". Go to the ",(0,a.kt)("inlineCode",{parentName:"p"},"peers")," folder."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd /home/ec2-user/workspace/wireguard/config\ncd peer1\ncat peer1.conf\n")),(0,a.kt)("p",null,"Save the content on that ",(0,a.kt)("inlineCode",{parentName:"p"},"peer1.conf")," file somewhere, it will be used on the client side to connect to the WireGuard server."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more details, see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/linuxserver/docker-wireguard"},"https://github.com/linuxserver/docker-wireguard"))),(0,a.kt)("h3",{id:"-whitelist-the-udp-port"},"\u25c9 Whitelist the UDP port"),(0,a.kt)("p",null,"If you are using cloud provider such as AWS where by default not all ports are public, an additional is required, which is whitelisting the inbound traffic directed to the WireGuard port (in this example, it is ",(0,a.kt)("inlineCode",{parentName:"p"},"51820"),"). Ensure to select the ",(0,a.kt)("inlineCode",{parentName:"p"},"UDP")," protocol because WireGuard uses ",(0,a.kt)("inlineCode",{parentName:"p"},"UDP"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"WireGuard VPN connect",src:n(5910).Z,width:"1250",height:"222"})),(0,a.kt)("h2",{id:"4-connect-to-wireguard"},"4. Connect to WireGuard"),(0,a.kt)("p",null,"The content of the ",(0,a.kt)("inlineCode",{parentName:"p"},".conf")," file is something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[Interface]\nPrivateKey = YDqQfiR6+VdaS3xqgSWW5CHAxhH0=\nAddress = 10.66.66.1/32,fd42:42:42::1/128\nDNS = 1.1.1.1,1.0.0.1\n\n[Peer]\nPublicKey = ByhoL4uTt2QzQb3dsadwereQzQbufXw=\nPresharedKey = aJDPFsuKvrE8TQM3RaQykrNP9os3ms=\nEndpoint = 123.456.78.9:50194\nAllowedIPs = 0.0.0.0/0,::/0\n")),(0,a.kt)("p",null,"Now open up the WireGuard client application, click ",(0,a.kt)("inlineCode",{parentName:"p"},"Add tunnel"),", then locate the ",(0,a.kt)("inlineCode",{parentName:"p"},".conf")," file. Next, click ",(0,a.kt)("inlineCode",{parentName:"p"},"activate")," to start the VPN peering connection."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"WireGuard VPN connect",src:n(3481).Z,width:"684",height:"543"})),(0,a.kt)("h2",{id:"5-set-up-wireguard-ui"},"5. Set Up WireGuard UI"),(0,a.kt)("p",null,"WireGuard UI is useful tools to manage your WireGuard server via friendly user interface. Such as adding user, adding new client, and other type of actions can be done in interactive manner via WireGuard UI."),(0,a.kt)("p",null,"If you use ",(0,a.kt)("inlineCode",{parentName:"p"},"linuxserver/wireguard")," Docker image on your end, add the ",(0,a.kt)("inlineCode",{parentName:"p"},"ngoduykhanh/wireguard-ui")," image to ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),", so the content of that file would be like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3.7'\n\nservices:\n  wireguard:\n    image: lscr.io/linuxserver/wireguard:latest\n    container_name: wireguard\n    cap_add:\n      - NET_ADMIN\n      - SYS_MODULE\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Asia/Jakarta\n      - SERVERURL=123.456.78.9\n      - SERVERPORT=51820\n      - PEERS=1\n      - PEERDNS=1.1.1.1\n      - INTERNAL_SUBNET=10.13.13.0\n      - ALLOWEDIPS=0.0.0.0/0,::/0\n      - PERSISTENTKEEPALIVE_PEERS=all\n      - LOG_CONFS=true\n    volumes:\n      - /home/ec2-user/workspace/wireguard/config:/config\n      - /lib/modules:/lib/modules\n    ports:\n      - 5000:5000 # \u2190 whitelist port 5000 for WireGuard UI\n      - 51820:51820/udp\n    sysctls:\n      - net.ipv4.conf.all.src_valid_mark=1\n    restart: always\n\n  wireguard-ui:\n    image: ngoduykhanh/wireguard-ui:latest\n    container_name: wireguard-ui\n    depends_on:\n      - wireguard\n    cap_add:\n      - NET_ADMIN\n    network_mode: service:wireguard\n    environment:\n      - SENDGRID_API_KEY\n      - EMAIL_FROM_ADDRESS\n      - EMAIL_FROM_NAME\n      - SESSION_SECRET\n      - WGUI_USERNAME=admin\n      - WGUI_PASSWORD=admin\n      - WG_CONF_TEMPLATE\n      - WGUI_MANAGE_START=true\n      - WGUI_MANAGE_RESTART=true\n    logging:\n      driver: json-file\n      options:\n        max-size: 50m\n    volumes:\n      - /home/ec2-user/workspace/wireguard/config:/etc/wireguard\n      - /home/ec2-user/workspace/wireguard/db:/app/db\n")),(0,a.kt)("p",null,"Re-run the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose up -d")," command, and then access the UI via ",(0,a.kt)("inlineCode",{parentName:"p"},"http://yourip:5000"),". You also need to whitelist the inbound access for port ",(0,a.kt)("inlineCode",{parentName:"p"},"5000"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"WireGuard VPN connect",src:n(8922).Z,width:"1253",height:"476"})),(0,a.kt)("p",null,"By default, both username and password is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),". Right after you logged in to the dashboard, do immediately change the password for safety reason. To do that, click ",(0,a.kt)("inlineCode",{parentName:"p"},"User Settings \u2192 Edit \u2192 Enter your new password \u2192 Save"),"."),(0,a.kt)("p",null,"To create a new client/tunnel access, click the ",(0,a.kt)("inlineCode",{parentName:"p"},"Wireguard Clients \u2192 New Client \u2192 Fill the info \u2192 Submit"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"WireGuard VPN connect",src:n(33).Z,width:"1253",height:"255"})))}p.isMDXComponent=!0},5910:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/setup-wireguard-vpn-server-1-ce6086822e74ec119b413d567d50ef12.png"},3481:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/setup-wireguard-vpn-server-2-94ca952e02bad1f466db4ad039b70407.png"},8922:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/setup-wireguard-vpn-server-3-8d54af7e4599d1cd32ffb45932a994b3.png"},33:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/setup-wireguard-vpn-server-4-fb30dfc77cb4ede7c4394fbb31dac3c0.png"}}]);